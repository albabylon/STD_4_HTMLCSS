!!!ПРОТОТИП!!!

Прототип (Prototype) — это объект, который служит вспомогательным объектом (делегатом), 
к характеристикам которого может обратиться оригинальный объект, 
в случае, если сам оригинальный объект не обладает нужной характеристикой.

Прототип хранит общий функционал и предоставляет к нему совместный доступ множеству объектов

Каждый объект имеет ноль или несколько свойств, которые называются собственными(own) и единственную внутреннюю ссылку на прототип.


const person = {
 city: "Moscow"
}

// создаем объект с прототипом
const student = Object.create(person);

// добавляем собственное свойство объекту student
student.ownCity = "Piter";

// обращаемся к свойству, которого нет в объекте student, но есть в его прототипе person 
console.log(student.city); // Moscow

Cвойство __proto__ содержит внутреннюю ссылку на прототип объекта. Это свойство есть абсолютно у всех объектов в JavaScript.
При создании объекта через литерал {}, его прототипом автоматически становится специальный built-in объект, 
который уже содержит ряд методов для работы с объектом.

__proto__ нельзя использовать. Чтобы получить доступ к __proto__ можно использовать свойство getPrototypeOf.

Object.getPrototypeOf(student); // person


for (let key in student) {
   console.log(key); // city, ownCity - выдает все свойства
}


for (let key in student) {
    if (student.hasOwnProperty(key)) {
        console.log(key); // ownCity - только свойство конкретного объекта
    }   
}



!!!Функции как объекты!!!

Можно создавать свойства как в обычном объекте:

const f = function(){

}

f.static = 1000;

У любой функции есть свойство Prototype — оно по умолчанию является объектом 
с единственным свойством constructor, которое ссылается на саму функцию.

Свойство Prototype используется, когда функция-конструктор вызывается через ключевое слово new. 


!!!Встроенные объекты и объекты-обертки!!!

Встроенные объекты всякие методы и свойства которые есть у всех объектов

Примитивы(String, Number...) не имеют прототипа, но когда вызывается str.toUpperCase() создается объект-обертка и 

