Объект — это неупорядоченная коллекция свойств, где каждое свойство состоит из имени (ключа) и ассоциированного с ним значения. 
Объекты в JavaScript можно называть ассоциативными массивами, так как они состоят из пары ключ-значение. 
Они предназначены для хранения сложных структур данных.

Объект создается с помощью фигурных скобок {...} с необязательным списком свойств

const user = {

    name: 'Andrei',

    surname: 'Ivanov',

    age: 18,

    position: 'developer',

};

Объектный литерал — { } — первичное выражение, которое может содержать ноль или несколько пар свойств

Пустой, который затем наполняется свойствами:
const obj = new Object();


Если значение свойства объекта является функцией, то такое свойство именуется методом.
Метод — свойство, которое может быть вызвано.

const obj = {
    a: 1,
    f: function() {
        console.log(1);
    },
};

!!Доступ к свойствам объекта

Точечная нотация (dot notation): object.IdentifierName
Скобочная нотация (bracket notation): object[Expression]

const obj = {
    myProp: 100,
    1: 200,
};
const key = 'myProp';

obj.myProp; // 100
obj['myProp']; // 100
obj[1]; // 200
obj[key]; // 100


Скобочная нотация также позволяет обратиться к свойству, имя которого хранится в переменной. Это называется вычисляемым свойством.

const lang = prompt("Введите название языка программирования", "javascript");
const collection = {
    [lang]: 'Лучший язык программирования!', // имя свойства будет взято из переменной lang
};
alert(collection.javascript);


!!Добавление, изменение и удаление свойства

const obj = {a: 1};

obj.a; // 1 – получаем значение

obj.a = 9; // устанавливаем новое значение

console.log(obj.a); // 9

obj.b = 100; // добавляем новое свойство с ключом b и значением 100

// obj['b'] = 100; добавление нового свойства в скобочной нотации

Удаление свойства из объекта — унарный оператор delete:
const obj1 = {a: 1};
delete obj1.a; 
console.log(obj1) // {}


!!Сравнение объектов

Объекты копируются и сравниваются по ссылке:

const obj1 = {a: 1};

const obj2 = obj1;

obj1 === obj2; // true

obj1.b = 2;

obj1 === obj2; // true

1 Проверка наличия свойства
Оператор in — возвращает true, если свойство содержится в указанном объекте.

const obj = {a: 1, c: undefined}; 
console.log('a'  in obj);

'a' in obj; // true
'b' in obj; // false
'c' in obj; // true

2 Итерация по объекту
Итерация предполагает проход по каждому из свойств объекта

Инструкция for...in — проходит по перечисляемым свойствам объекта.

const obj = {a: 1, b: 2};
for (let key in obj) {
    // выводим все названия свойств
    console.log(key);
}
// a
// b


for (let key in obj) {
    // выводим все значения свойств
    console.log(obj[key]);
}
// 1
// 2